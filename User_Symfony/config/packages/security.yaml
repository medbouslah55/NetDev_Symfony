security:
    encoders:
        App\Entity\Membre:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: ~ }
        in_database :
            entity:
                class: App\Entity\Membre
                property: email
                
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: in_database
            form_login:
                login_path: loginadmin
                check_path: loginadmin
            logout:
                path: deconnexion
                target: home



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_USER: [ ROLE_USER ]
        ROLE_ADMIN: [ROLE_ADMIN]
    access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/membre, roles: ROLE_USER }

